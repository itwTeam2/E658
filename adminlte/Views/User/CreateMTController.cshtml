
@model E658.Models._UserManagementE658

@{
    ViewBag.Title = "CreateMTController";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    <div class="content-wrapper">

        <section class="content-header">
            <h1 style="text-align:center"><span> User Profile</span></h1>

            <div id="ErrorMessage" style="margin-top:5px">
                @if (TempData["ScfMsg"] != null)
                {
                    <div id="Msg" class="col-lg-12  alert alert-success">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <strong>Alert! </strong> @TempData["ScfMsg"]
                    </div>
                }
                else if (TempData["ErrMsg"] != null)
                {
                    <div id="Msg" class="col-lg-12 alert alert-danger">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <strong>Alert! </strong>@TempData["ErrMsg"]
                    </div>
                }
            </div>
        </section>

        <br />
        <section class="col-lg-12 connectedSortable" style="margin-top:5px">
            <div class="nav-tabs-custom">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="box-body">
                            @*Service No and  @*Rank*@
                            <div class="form-group">
                                @Html.Label("Service Number", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.ServiceNo, new { @class = "form-control", autocomplete = "off" })
                                @Html.HiddenFor(model => model.SNo)
                                @Html.HiddenFor(model => model.EUMID)
                                @Html.ValidationMessageFor(model => model.ServiceNo, string.Empty, new { @class = "label label-danger" })
                            </div>

                            @*Rank*@
                            <div class="form-group">
                                @Html.Label("Rank", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.Rank, new { @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.Rank, string.Empty, new { @class = "label label-danger" })

                            </div>

                            <div class="form-group">

                                @Html.Label("Name", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", autocomplete = "off", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.FullName, string.Empty, new { @class = "label label-danger" })

                            </div>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="box-body">

                            <div class="form-group">
                                @Html.Label("MT Controller Location", new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Location, ViewBag.DDL_GERSLocation as SelectList, "SELECT", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Location, string.Empty, new { @class = "label label-danger" })
                            </div>

                            @*Select Date*@
                            <div class="form-group">

                                @Html.Label("Select Date", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.DutyDate, new { @class = "form-control - ", autocomplete = "off", @type = "date" })
                                @*@Html.HiddenFor(model => model.DutyDate)*@
                            </div>
                            <span class="text-danger" id="dateErrorMessage"></span>

                            <div class="form-group">
                                <input type="submit" value="Save" class="btn btn-info pull-right" name="btnSave" id="btnHandOver">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
}



<script src="@Url.Content("~/Scripts/Jq.js")"></script>

<script type="text/javascript">


   $(function () {
       $("#ServiceNo").change(function () {
            $.ajax({
                url: '@Url.Content("~/User/getUserInfo")',
                type: 'POST',
                dataType: 'json',
                data: { id: $("#ServiceNo").val() },
                success: function (data) {
                    if (data.ServiceNo == "Service number is not valid.") {
                        alert("Service number is not valid.");

                        $("#ServiceNo").val('');
                        $("#SNo").val('');
                        $("#FullName").val('');
                        $("#Rank").val('');

                    }
                    else {
                        //$("#OMTServiceNo").val(data.ServiceNo);
                        $("#SNo").val(data.SNo);
                        $("#FullName").val(data.Name);
                        $("#Rank").val(data.Rank);
                    }
                },
                error: function () {
                    alert("error in function");
                }
            });
        });
   });


    //Check the Date duration is in the correct range
    $(function () {
        $('#DutyDate').change(function () {


            var dutyDate = new Date($(this).val());
            var currentDate = new Date();

            // Remove the time part for date comparison
            currentDate.setHours(0, 0, 0, 0);

            if (!isNaN(dutyDate))
            {
                if (dutyDate < currentDate)
                {
                    $("#dateErrorMessage").text("Duty date cannot be in the past.");
                    //$("#createButton").attr("disabled", "disabled");
                } else {
                    $("#dateErrorMessage").text("");
                    //$("#createButton").removeAttr("disabled");
                }
            }
            else
            {
                $("#dateErrorMessage").text("Duty date is required.");
                //$("#createButton").attr("disabled", "disabled");
            }
        });
    });

</script>

