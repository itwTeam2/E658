@model E658.Models.VME658InitiateUser
@{
    ViewBag.Title = "TransportAuthIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("TransportAuthIndex", "User", FormMethod.Post, new { id = "requestAuthorityForm" }))
{
    <div class="content-wrapper" style="min-height: 786px;">
        <!-- Header Section -->
        <section class="content-header">
            <h1 style="text-align: center;">
                <span>Transport Authority</span>
            </h1>
            <button type="button" class="btn btn-success pull-right" onclick="location.href='@Url.Action("Index", "User")'">
                <span>Back To Main Page</span>
            </button>
            <div id="ErrorMessage" style="margin-top: 5px;">
                @if (TempData["ScfMsg"] != null)
                {
                    <div id="Msg" class="alert alert-success">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <strong>Alert! </strong>@TempData["ScfMsg"]
                    </div>
                }
                else if (TempData["ErrMsg"] != null)
                {
                    <div id="Msg" class="alert alert-danger">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        <strong>Alert! </strong>@TempData["ErrMsg"]
                    </div>
                }
            </div>
        </section>

        <!-- Buttons Section -->
        <section class="col-lg-12 connectedSortable" style="margin-top: 20px;">
            <div class="modern-ui-container">
                <button type="button" class="modern-button request-authority" id="btnRequestAuthority">Request Authority</button>
                <button type="button" class="modern-button create-e658" onclick="location.href='@Url.Action("GenerateTrans658", "LongRun")'">Create 658</button>
            </div>
        </section>
    </div>

    <!-- Modal structure Request Authority -->
    <div class="modal fade" id="requestAuthorityModal" tabindex="-1" role="dialog" aria-labelledby="requestAuthorityModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title modelHeading" id="requestAuthorityModalLabel">Request Creator Info</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <!-- Modal content -->
                    <div class="form-group">
                        <div class="col-lg-6">
                            <label for="serviceNo">Service No:</label>
                            @*<input type="text" class="form-control" id="ServiceNo" value="@Model.ServiceNo">*@
                            @Html.TextBoxFor(model => model.ServiceNo, new { @class = "form-control - ", autocomplete = "off" })
                        </div>
                        <div class="col-lg-6">
                            <label for="rank">Rank:</label>
                            <input type="text" class="form-control" id="Rank" readonly>
                        </div>

                    </div>

                    <div class="form-group">
                        <div class="col-lg-6">
                            <label for="name">Name:</label>
                            <input type="text" class="form-control" id="FullName" readonly>
                        </div>
                        <div class="col-lg-6">
                            <label for="userLocation">User Location:</label>
                            @Html.DropDownListFor(model => model.SelectedUserLocation, Model.UserLocations, "Select Location", new { @class = "form-control" })
                            @*<input type="text" class="form-control" id="userLocation">*@
                        </div>

                    </div>
                    <div class="form-group">
                        <div class="col-lg-12">
                            @Html.Label("Section", new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Section, new SelectList(string.Empty, "Value", "Text"), "SELECT", htmlAttributes: new { @class = "form-control" })
                            @*@Html.TextBoxFor(model => model.Section, new { @class = "form-control", @readonly = "readonly" })*@
                        </div>
                    </div>
                    @*<div class="form-group">

                        </div>*@
                </div>
                <div class="modal-footer" style="margin-top:155px">
                    <button type="button" class="btn btn-danger pull-left" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-info pull-right" id="btnNext">Next</button>
                </div>
            </div>
        </div>
    </div>
       

}



<!-- CSS Section -->
<style>
    .modern-ui-container {
        background-color: #3c80fa; /* #e9c6f3; */
        border-radius: 15px;
        padding: 40px;
        display: flex;
        justify-content: space-around;
        align-items: center;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        margin: 20px auto;
        max-width: 600px;
        text-align: center;
    }

    .modern-button {
        padding: 15px 30px;
        font-size: 16px;
        font-weight: bold;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
    }

        .modern-button.request-authority {
            background-color: #573cfa; /* #7eb6ff; */
            color: white;
        }

            .modern-button.request-authority:hover {
                background-color: #559dff;
            }

        .modern-button.create-e658 {
            background-color: #b63cfa; /* #b4f5b4; */
            color: white;
        }

            .modern-button.create-e658:hover {
                background-color: #c669d1; /*#91e491;*/
            }

    .modelHeading {
        font-size: 22px;
        font-weight: 700;
        background-color: #8b80e3;
        padding: 10px;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);
        border-radius: 5px;
        text-align: center;
        color: white;
    }
</style>

<script src="@Url.Content("~/Scripts/Jq.js")"></script>
<script>
    $(document).ready(function () {
        $('#btnRequestAuthority').click(function () {
            $('#requestAuthorityModal').modal('show');
        });


    });

   $(function () {
        $("#ServiceNo").change(function () {
            $.ajax({
                url: '@Url.Content("~/User/getUserInfo")',
                type: 'POST',
                dataType: 'json',
                data: { id: $("#ServiceNo").val() },
                success: function (data) {
                    if (data.ServiceNo == "Service number is not valid.") {
                        alert("Service number is not valid.");
                        $("#ServiceNo").val('');
                        $("#SNo").val('');
                    }
                    else {
                        $("#ServiceNo").val(data.ServiceNo);
                        $("#SNo").val(data.SNo);
                        $("#FullName").val(data.Name);
                        $("#Rank").val(data.Rank);
                        $("#Trade").val(data.Branch);
                    }
                },
                error: function () {
                    alert("error in function");
                }
            });
        });
   });


        $(function () {
        //DDL for Select
  $("#SelectedUserLocation").change(function () {
            //DDL Automaticaly Bind
            $("#Section").empty();
            $.ajax({
                type: 'GET',
                dataType: "json",
                url: '@Url.Content("~/User/FromLocationGerms")',
                //url: './FromLocation',
                data: { id: $("#SelectedUserLocation").val()},
                success: function (FromLocation) {
                    var items = '<option>SELECT</option>';
                    $('#Section').html(items);
                    $.each(FromLocation, function (i, FromLocation) {
                        $("#Section").append('<option value="' + FromLocation.Value + '">' +
                            FromLocation.Text + '</option>');
                        //$("#District").val(data.DESCRIPTION);
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve Make.' + ex);
                }
            });
            return false;
        })
   });



</script>