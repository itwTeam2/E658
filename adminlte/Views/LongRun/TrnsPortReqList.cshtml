
@model PagedList.IPagedList<E658.Models.VMTrnsAuthIndex>
@using PagedList.Mvc;
@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="content-wrapper" style="height:900px !important;">

    <section class="content-header">
        <h1>
            Transport Authority Request List
            @*<small>Forward Your list</small>*@
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Transport Authority Request List</li>
        </ol>
        <div id="ErrorMessage">
            @if (TempData["ScfMsg"] != null)
            {
                <div id="Msg" class="col-lg-12  alert alert-success">
                    <button type="button" class="close" data-dismiss="alert">×</button>
                    <strong>Alert!</strong> @TempData["ScfMsg"]
                </div>
            }
            else if (TempData["ErrMsg"] != null)
            {
                <div id="Msg" class="col-lg-12 alert alert-danger">
                    <button type="button" class="close" data-dismiss="alert">×</button>
                    <strong>Alert!</strong>@TempData["ErrMsg"]
                </div>

            }
        </div>
    </section>

    <section class="col-md-12 connectedSortable" style="margin-top:10px">
        <div class="nav-tabs-custom">
            @Html.ValidationSummary(true)
            <div class="box-body">
                @using (Html.BeginForm("TrnsPortReqList", "LongRun", FormMethod.Get))
                {
                    <div class="input-group col-lg-6">
                        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { placeholder = "Select the date", @class = "form-control", @type = "date" })
                        <div class="input-group-btn">
                            <button type="submit" class="btn btn-success"><i class="fa fa-search"></i></button>
                        </div>
                    </div>
                }

                <table id="example" class="table table-responsive table-striped table-hover" style="margin-top:5px">
                    @{
                        <tr>
                            @*<th>
                                    <input type="checkbox" id="checkAll" />
                                </th>*@
                            <th>
                                Request Reference No
                            </th>
                            <th>
                                From Location
                            </th>
                            <th>
                                To Location
                            </th>
                            <th>
                                Request Date
                            </th>
                            @*<th>
                                    Journey Start Time
                                </th>*@
                            <th>
                                Request Originate Section
                            </th>
                            <th>
                                Request Run Behavior
                            </th>

                            <th></th>
                            <th></th>


                        </tr>
                    }

                    @{
                        /// This int i == 1  is required. this is to model class
                        int i = 1;

                        int MTControllerStatus = Convert.ToInt32(TempData["MTControllerStatus"]);

                        foreach (var item in Model)
                        {


                            <tr>

                                <td>
                                    @Html.DisplayFor(modelItem => item.CmpTrnsRefNo)
                                    @Html.HiddenFor(modelItem => item.EFTID, new { id = "hndEFTID" })
                                    @Html.HiddenFor(modelItem => item.ETrnsCreatorDltId, new { id = "hndECDID" })
                                    @Html.HiddenFor(modelItem => item.RoleID, new { id = "hndRoleID" })

                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.DeptFromLocationFull)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.DeptToLocationFull)
                                </td>

                                <td>
                                    @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.OutDate))

                                </td>

                                @*<td>
                                        @Convert.ToString(string.Format("{0:HH:mm tt}", item.JournryStartTime))
                                    </td>*@

                                <td>
                                    @Html.DisplayFor(modelItem => item.ReqSection)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.ReqCatName)
                                </td>


                                <td>

                                    @functions {
                                        // Helper function to base64 encode the concatenated values
                                        public string EncodeIds(int creatorId, int roleId, int eFlowId)
                                        {
                                            // Concatenate the values
                                            //string concatenatedValues = $"{creatorId}:{roleId}:{eFlowId}";

                                            // string concatenatedValues = $"{creatorId}:{roleId}:{eFlowId}";

                                            string concatenatedValues = string.Format("{0}:{1}:{2}", creatorId, roleId, eFlowId);

                                            // Convert to Base64 string
                                            byte[] bytes = System.Text.Encoding.UTF8.GetBytes(concatenatedValues);
                                            return Convert.ToBase64String(bytes);
                                        }
                                    }


                                    @if (item.RoleID == (int)E658.Enum.EnumE658UserType.FormationUser)
                                    {
                                        <button type="button" class="col-lg- btn btn-primary" onclick="location.href='@Url.Action("ETransReqDetails", "LongRun", new { userID = EncodeIds(item.ETrnsCreatorDltId, item.RoleID,  item.EFTID )})'">
                                            <span> <i class="fa fa-eye" aria-hidden="true"></i></span>
                                        </button>

                                        @*@Html.ActionLink("Edit", "Edit658", new { userID = EncodeIds(item.ETrnsCreatorDltId, item.RoleID, 0) }, new { @class = "btn btn-default" })*@

                                    }

                                    else if (item.RoleID == (int)E658.Enum.EnumE658UserType.HQAppAuth)
                                    {
                                        <button type="button" class="col-lg- btn btn-primary" onclick="location.href='@Url.Action("ETransReqDetails", "LongRun", new { userID = EncodeIds(item.ETrnsCreatorDltId, item.RoleID,  item.EFTID )})'">
                                            <span> <i class="fa fa-eye" aria-hidden="true"></i></span>
                                        </button>


                                        //Model Pop Up code
                                        //<button type="button" onclick="setValueToURL(@i,'@item.CmpTrnsRefNo')" value="Select" class="btn btn-warning">
                                        //    <span><i class="fa fa-folder-open-o" aria-hidden="false"></i></span>
                                        //</button>

                                        @*if (item.IsOMTAvail == 0 && item.IsVehicleAvail == 0)
                                        {
                                            <button type="button" class="btn btn-success pull-right" onclick="location.href='@Url.Action("Forward", "E658", new { roleId = item.RoleID, E658CreatorDltId = item.ECDID })'">
                                                <span><i class="fa fa-check" aria-hidden="false"></i> Approved</span>
                                            </button>

                                        }*@
                                    }

                                    else if (item.RoleID == (int)E658.Enum.EnumE658UserType.SOGO)
                                    {

                                        <button type="button" class="col-lg- btn btn-primary" onclick="location.href='@Url.Action("ETransReqDetails", "LongRun", new { userID = EncodeIds(item.ETrnsCreatorDltId, item.RoleID,  item.EFTID )})'">
                                            <span> <i class="fa fa-eye" aria-hidden="true"></i></span>
                                        </button>
                                    }
                                    else {
                                    
                                    
                                    }
                                </td>

                                <td>
                                    @*<input id="btnViewInfo" type="button" onclick="setValueToURL(@i,'@item.UnitSerialNo')" value="Select" class="btn btn-danger" />*@
                                </td>
                            </tr>

                            @*Fixed Details Id popup Box value*@
                            i++;
                        }
                    }
                </table>
                <br />
                @*Paging for Data Table *use only MVC no Javascript*@
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                @Html.PagedListPager(Model, page => Url.Action("TrnsPortReqList",
                 new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
            </div>
        </div>
    </section>

</div>

<!-- Placeholder for the modal -->
<div id="modalContainer"></div>

<div id="modalContainerReject"></div>




@*<div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-hidden="true">

        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header" style="border-bottom:none !important;">
                    <center><h4><b>Reject Comments</b></h4></center>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <hr style="margin-top: 0px !important; margin-bottom: 0px !important; padding-bottom: 0px !important; padding-top: 0px !important; " />
                </div>
                <div class="modal-body" id="partial2">
                    @{
                        <div>
                            @Html.Partial("_E658RejectComment")
                        </div>
                    }

                </div>
            </div>
        </div>

    </div>*@


@*<script src="@Url.Content("~/Scripts/Jq.js")"></script>*@
<script src="~/Scripts/Jq.js"></script>


@*<script src="~/Scripts/jquery-3.6.0.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>*@

<script>
    function setValueToURL(assignedId,unitSerialNo) {
        //console.log("Assigned ID:", assignedId);
        //alert(assignedId);
        //alert(unitSerialNo);
        // You can add more logic here, such as setting this value to a URL or using it in other ways

        var encodedId = btoa(unitSerialNo); // Base64 encode the unitSerialNo

        //var id = unitSerialNo;

        $.ajax({
            url: '@Url.Action("E658DetailsFinalView", "E658")/' + encodedId,
            type: 'GET',
            success: function (data) {
                $('#modalContainer').html(data);
                $('#recordDetailsModal').modal('show');
            },
            error: function (xhr, status, error) {
                console.error('Error loading details:', status, error);
            }
        });

    }

    function setValueToReject(assignedId, RoleID, ECDID, EFTID) {
        //console.log("Assigned ID:", assignedId);
        //alert(assignedId);
        //alert(unitSerialNo);
        // You can add more logic here, such as setting this value to a URL or using it in other ways

        //var id = unitSerialNo;

        $.ajax({
            url: '@Url.Action("Reject", "E658")?ECDID=' + ECDID + '&EFlowID=' + EFTID + '&RoleId=' + RoleID,
            type: 'GET',
            success: function (data) {
                $('#modalContainerReject').html(data);
                $('#recordDetailsModal2').modal('show');
            },
            error: function (xhr, status, error) {
                console.error('Error loading details:', status, error);
            }
        });

      }

     @*$(function () {
         $('#btnReject').click(function () {


             var E658CreatorID = $("#CreatorID").val();
             var EFlowID = $("#FlowID").val();
             var RoleID = $("#RoleID").val();
             var route = '@Url.Action("Reject", "E658")?ECDID=' + E658CreatorID + '&EFlowID=' + EFlowID + '&RoleId=' + RoleID;
             //console.log(route);
            //$('#partial2').load(route);

        });
    });*@


</script>
