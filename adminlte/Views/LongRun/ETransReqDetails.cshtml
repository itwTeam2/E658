@using E658.Models
@model IEnumerable<E658.Models.VME658Create>


@{
    ViewBag.Title = "ETransReqDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    {

        @Html.AntiForgeryToken()

        <div class="content-wrapper" style="height:900px !important;">

            <section class="content-header">

                <h1>
                    Transport Authority Request  - Details
                    <small>View Details</small>
                </h1>

                <ol class="breadcrumb">
                    <li><a href="#"><i class="fa fa-dashboard"></i> E-658</a></li>
                    <li class="active">View Details</li>
                </ol>

                <div id="ErrorMessage">
                    @if (TempData["ScfMsg"] != null)
                    {
                        <div id="Msg" class="col-lg-12  alert alert-success">
                            <button type="button" class="close" data-dismiss="alert">×</button>
                            <strong>Alert! </strong> @TempData["ScfMsg"]
                        </div>
                    }
                    else if (TempData["ErrMsg"] != null)
                    {
                        <div id="Msg" class="col-lg-12 alert alert-danger">
                            <button type="button" class="close" data-dismiss="alert">×</button>
                            <strong>Alert! </strong>@TempData["ErrMsg"]
                        </div>

                    }

                </div>

            </section>

            <br />

            <section class="col-lg-12 nav-tabs-custom connectedSortable" style="background-color: white; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1)">


                @foreach (var item in Model)
                {
                    <div class="row">
                        <div class="col-lg-6">
                            <dl class="row" style="margin-top:10px">
                                @* Destination From: *@
                                <dt class="col-sm-4 form-group">
                                    Destination From :
                                </dt>

                                <dd class="col-sm-8 form-group">
                                    @Html.DisplayFor(model => item.FromLocID)
                                </dd>

                                @*Destination To *@

                                <dt class="col-sm-4 form-group">
                                    Destination To :
                                </dt>

                                <dd class="col-sm-8 form-group">
                                    @Html.DisplayFor(model => item.ToLocId)
                                </dd>

                                @*TransPortAuth No *@
                                <dt class="col-sm-4 form-group">
                                    E-Transport Reference No :
                                </dt>

                                <dd class="col-sm-8 form-group">
                                    @Html.DisplayFor(model => item.UnitSerialNo)
                                    @Html.HiddenFor(model => item.ECDID, new { id = "CreatorID" })
                                    @Html.HiddenFor(model => item.EFTID, new { id = "FlowID" })
                                    @Html.HiddenFor(model => item.RoleID, new { id = "RoleID" })
                                    @Html.HiddenFor(model => item.Behavior, new { id = "Behavior" })
                                </dd>

                                @* E-658 Run Type : *@
                                <dt class="col-sm-4">
                                    E-Transport Run Type :
                                </dt>
                                <dd class="col-sm-8 form-group">
                                    @Html.DisplayFor(model => item.E658RunType)
                                </dd>

                                @* E-658 Behavior : *@
                                <dt class="col-sm-4 form-group">
                                    E-Transport Behavior :
                                </dt>

                                <dd class="col-sm-8 form-group">
                                    @Html.DisplayFor(model => item.TypeName)
                                </dd>

                                @* E-658 Date : *@
                                <dt class="col-sm-4 form-group">
                                    E-Trarnsport Date :
                                </dt>

                                <dd class="col-sm-8 form-group">
                                    @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.E658Date))
                                </dd>

                                @*Journry Start Time : *@
                                <dt class="col-sm-4 form-group">
                                    Journey Start Time :
                                </dt>

                                <dd class="col-sm-8 form-group">
                                    @Convert.ToString(string.Format("{0:HH:mm tt}", item.JournryStartTime))
                                </dd>
                            </dl>

                        </div>

                        <div class="col-lg-6">

                            <dl class="row" style="margin-top:10px">

                                @*Journry Return Date : *@
                                <dt class="col-sm-4 form-group">
                                    Journey Return Date  :
                                </dt>

                                <dd class="col-sm-8 form-group">
                                    @Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.ReturnDate))
                                </dd>

                                @*Purpose :*@
                                <dt class="col-sm-4 form-group">
                                    Purpose :
                                </dt>

                                <dd class="col-sm-8 form-group">
                                    @Html.DisplayFor(model => item.Purpose)
                                </dd>

                                @* Route :*@
                                <dt class="col-sm-4 form-group">
                                    Route :
                                </dt>
                                <dd class="col-sm-8 form-group">
                                    @Html.DisplayFor(model => item.Route)
                                </dd>

                                @* Night Park Status :*@
                                <dt class="col-sm-4 form-group">
                                    Night Park Status :
                                </dt>
                                <dd class="col-sm-8 form-group">
                                    @Html.DisplayFor(model => item.NightParkStatus)
                                </dd>

                                @if (item.IsNightPark == 1)
                                {
                                    @* OMTStatus :*@
                                    <dt class="col-sm-4 form-group">
                                        Night Park Location:
                                    </dt>

                                    <dd class="col-sm-8 form-group">
                                        @Html.DisplayFor(model => item.NightParkLoc)

                                    </dd>
                                }

                                @* OMTStatus :*@
                                <dt class="col-sm-4 form-group">
                                    OMT Service No :
                                </dt>
                                <dd class="col-sm-8 form-group">
                                    @Html.DisplayFor(model => item.OMTServiceNo)
                                </dd>

                                @*Vehicle SLAF Reg No :*@
                                <dt class="col-sm-4 form-group">
                                    Vehicle SLAF Reg No :
                                </dt>
                                <dd class="col-sm-8 form-group">
                                    @Html.DisplayFor(model => item.SLAFRegNo)
                                </dd>
                            </dl>

                        </div>

                    </div>
                    if (item.IsAddiDutyReq == 1)
                    {
                        <div class="row">
                            <div id="additionalDutyDiv">
                                <p><center><b>Requested Additional Duties</b> </center></p>
                                @if (ViewBag.ETransAddiDuty != null && ((List<E658.Models.ETransAddiDuty>)ViewBag.ETransAddiDuty).Any())
                                {
                                    foreach (var duty in (List<E658.Models.ETransAddiDuty>)ViewBag.ETransAddiDuty)
                                    {
                                        <div class="addi-duty-item" style="border: 1px solid #dee2e6; padding: 0.5rem; margin-bottom: 0.5rem; border-radius: 0.25rem; background-color: #f8f9fa; ">
                                            <div style="margin-bottom: 0.5rem;">
                                                <strong>Duty Date:</strong> @duty.AddiDutyDate <br />
                                            </div>
                                            <div style="margin-bottom: 0.5rem;">
                                                <strong>Purpose:</strong> @duty.AddiDutyPurpose <br />
                                            </div>
                                            <div style="margin-bottom: 0.5rem;">
                                                <strong>Route:</strong> @duty.AddiDutyRout
                                            </div>


                                        </div>
                                    }
                                }
                                else
                                {
                                    <div>No Additional Duties Assigned</div>
                                }
                            </div>
                        </div>
                    }


                    if (item.RoleID == (int)E658.Enum.EnumE658UserType.HQAppAuth)
                    {
                        <div class="row">
                            <div class="col-lg-6" style="margin-top:15px">

                                @Html.Label("Authrized Remarks", new { @class = "control-label" })                               
                                <input type="text" name="HQAuthRemarks" class="form-control" autocomplete="off" id="txtHQAuthRemarks" />

                            </div>
                        </div>
                        
                    }

                    if (item.RoleID == (int)E658.Enum.EnumE658UserType.SOGO)
                    {
                        <div class="row">
                            <div class="col-lg-6" style="margin-top:15px">

                                @Html.Label("SO/GO Remarks", new { @class = "control-label" })
                                @*@Html.TextAreaFor(model => model.SOGORemark, new { @class = "form-control ", autocomplete = "off" })*@
                                <input type="text" name="SOGORemark" class="form-control" autocomplete="off"  id="txtSOGORemark"/>
                            </div>
                         </div>
                        
                    }


                    <div class="col-lg-6">
                        <div class="row">
                            @if (item.RecordStatus != 2)
                            {
                                int userType = Convert.ToInt32(TempData["UserLoginType"]);

                                switch (item.RoleID)
                                {
                                    case (int)E658.Enum.EnumE658UserType.FormationUser:


                                        <button type="button" class="col-lg-6 btn btn-warning pull-right" onclick="location.href='@Url.Action("Forward", "LongRun", new { roleId = item.RoleID, E658CreatorDltId = item.ECDID, Behavior = item.Behavior})'">
                                            <span><i class="fa fa-share" aria-hidden="true"></i> Certify</span>
                                        </button>

                                        break;
                                    case (int)E658.Enum.EnumE658UserType.HQAppAuth:

                                        <div class="col-lg-6">
                                            <button type="button" class="btn btn-success" id="btnFinalApproval">
                                                <span><i class="fa fa-check"></i> Final Approval</span>
                                            </button>
                                        </div>
                                        <div class="col-lg-6">
                                            <button type="button" id="btnReject" class="col-lg-6 btn btn-danger col-lg-offset-12">
                                                <span><i class="fa fa-times" aria-hidden="false"></i> Reject</span>
                                            </button>
                                        </div>

                                        break;
                                    case (int)E658.Enum.EnumE658UserType.SOGO:

                                        <div class="col-lg-6">

                                            <button type="button" class="col-lg- btn btn-warning" id="btnSOGOCertify">
                                                <span><i class="fa fa-share" aria-hidden="true"></i> Certify</span>
                                            </button>



                                            <button type="button" class="col-lg- btn btn-danger col-lg-offset-2" onclick="location.href='@Url.Action("RejectRecordFinalAuthority", "E658", new { roleId = item.RoleID, ECDID = item.ECDID, EFTID = item.EFTID})'">
                                                <span><i class="fa fa-times" aria-hidden="false"></i> Reject</span>
                                            </button>

                                            
                                        </div>

                                        break;
                                    default:

                                        if (userType == (int)E658.Enum.EnumE658UserType.MTController
                                            || userType == (int)E658.Enum.EnumE658UserType.FormationUser)
                                        {

                                        }
                                        else
                                        {


                                            <button type="button" class="btn btn-success pull-right" onclick="location.href='@Url.Action("TransportAuthIndex", "User")'">
                                                <span>Back To Creater Page</span>
                                            </button>

                                            @*<button type="button" class="col-lg- btn btn-warning pull-right" onclick="location.href='@Url.Action("EditTranportAuth", "LongRun" , new { userID = EncodeIds(item.ECDID, item.RoleID,0)})'">
                                        <span>Edit Record</span>
                                    </button>*@
                                        }

                                        break;
                                }
                            }

                            else
                            {
                                <dl class="dl-horizontal">
                                    @*Record Status :*@
                                    <dd>

                                        <P style="text-align:center"><b style="background-color:crimson">Your Record has been rejected.</b></P>

                                    </dd>

                                </dl>
                            }
                        </div>
                    </div>


                    @functions {
                        // Helper function to base64 encode the concatenated values
                        public string EncodeIds(int creatorId, int roleId, int eFlowId)
                        {
                            // Concatenate the values
                            //string concatenatedValues = $"{roleId}:{creatorId}";

                            string concatenatedValues = string.Format("{0}:{1}:{2}", creatorId, roleId, eFlowId);

                            // Convert to Base64 string
                            byte[] bytes = System.Text.Encoding.UTF8.GetBytes(concatenatedValues);
                            return Convert.ToBase64String(bytes);
                        }
                    }

                }
            </section>

            <section class="col-lg-12 nav-tabs-custom connectedSortable">
                <div class="nav-tabs-custom">
                    <div class="box-body">

                        @* OMT Service Details*@

                        <div class="form-group" id="dvOMTInfo" style="margin-top:8px">
                            <h5>Enter nominated OMT Service Number and click save button</h5>
                            <div class="col-lg-2">
                                @*Service Number*@
                                <div class="form-group">
                                    @Html.Label("Service Number", new { @class = "control-label" })
                                    <input type="text" class="form-control" id="txtOMTServiceNo" />
                                </div>
                            </div>

                            <div class="col-lg-2">
                                @*Rank*@
                                <div class="form-group">
                                    @Html.Label("Rank", new { @class = "control-label" })
                                    <input type="text" class="form-control" id="txtRank" readonly />
                                </div>
                            </div>

                            <div class="col-lg-6">
                                @*Name*@
                                <div class="form-group">
                                    @Html.Label("Name", new { @class = "control-label" })
                                    <input type="text" class="form-control" id="txtFullName" readonly />
                                </div>
                            </div>
                            <div class="col-lg-2">
                                @*BtnOmtSave*@
                                <div class="form-group">
                                    @Html.Label("Click the Save Button", new { @class = "control-label" })
                                    <input type="button" value="Save" class="btn btn-success" id="btnSaveOmt" name="Save">
                                </div>
                            </div>
                        </div>

                        <div class="form-group" id="dvVehicleInfo">
                            <h5>Enter nominated Vehicle  Number and click save button</h5>
                            <div class="col-lg-4">
                                @*Vehicle No*@
                                <div class="form-group">
                                    @Html.Label("Vehicle Reg No", new { @class = "control-label" })
                                    <input type="text" class="form-control" id="txtVehicleRegNo" />
                                </div>

                                @*Vehicle Attached Location*@
                                <div class="form-group">
                                    @Html.Label("Vehicle Attached Location", new { @class = "control-label" })
                                    <input type="text" class="form-control" id="txtVehicleAttachedLoc" readonly />
                                </div>

                            </div>
                            <div class="col-lg-4">
                                @*Vehicle Chassis Number*@
                                <div class="form-group">
                                    @Html.Label("Vehicle Chassis Number", new { @class = "control-label" })
                                    <input type="text" class="form-control" id="txtVehicleChassisNo" readonly />
                                </div>

                            </div>
                            <div class="col-lg-4">
                                @*btn Save Vehicle*@
                                <div class="form-group">
                                    @Html.Label("Click the Save Button", new { @class = "control-label" })
                                    <input type="button" value="Save" class="btn btn-success" id="btnSaveVehicle" name="Save">
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </section>

        </div>
    }
}

<div id="modalContainerReject"></div>

@*<div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-hidden="true">

        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header" style="border-bottom:none !important;">
                    <center><h4><b>Reject Comments</b></h4></center>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <hr style="margin-top: 0px !important; margin-bottom: 0px !important; padding-bottom: 0px !important; padding-top: 0px !important; " />
                </div>
                <div class="modal-body" id="partial2">
                    @{
                        <div>
                            @Html.Partial("_E658RejectComment")
                        </div>
                    }

                </div>
            </div>
        </div>

    </div>*@


@*<script src="@Url.Content("~/Scripts/Jq.js")"></script>*@
<script src="../Scripts/Jq.js"></script>
<script type="text/javascript">

    $(document).ready(function () {

        ///Created BY   : Sqn Ldr Wicky
        ///Created Date : 2024/05/15
        ///Description : hide the Div

        /// Drop down list in Operation Contribution

        $("#dvOMTInfo").hide();
        $("#dvVehicleInfo").hide();

    });

    $(function () {

        //Created BY   : Sqn Ldr Wicky
        ///Created Date : 2024/05/15
        ///Description : show and hide the dvOMTInfo div

        var clickCount = 0;
        $("#isAssignOMT").click(function () {
            clickCount++;
            if (clickCount % 2 === 1) {
                $("#dvOMTInfo").show();
            }
            else {
                $("#dvOMTInfo").hide();
            }

        });
    });

    $(function () {

        //Created BY   : Sqn Ldr Wicky
        ///Created Date : 2024/05/15
        ///Description : show and hide the dvVehicleInfo div

        var clickCount = 0;

        $("#isAssignVehicle").click(function () {
            clickCount++;
            if (clickCount % 2 === 1) {
                $("#dvVehicleInfo").show();
            }
            else {
                $("#dvVehicleInfo").hide();
            }

        });
    });

    $(function () {

        //Created BY   : Sqn Ldr Wicky
        ///Created Date : 2024/05/15
        ///Description : load OMT service Details

        $("#txtOMTServiceNo").change(function () {
            $.ajax({
                url: '@Url.Content("~/E658/getUserInfo")',
                type: 'POST',
                dataType: 'json',
                data: { id: $("#txtOMTServiceNo").val()},
                success: function (data)
                {
                    if (data.Message == "This OMT has been allocated to a journey.Please enter another OMT service Number.")
                    {
                        alert("This OMT has been allocated to a journey.Please enter another OMT service Number.");
                        $("#txtOMTServiceNo").val('');
                        data.Message = {};
                    }
                    else
                    {
                        if (data.Name == "Service number is not valid.")
                        {
                            alert("Service number is not valid.");
                            $("#txtOMTServiceNo").val('');
                            data.Name = {};

                        }
                        else
                        {
                            $("#txtOMTServiceNo").val(data.ServiceNo);
                            $("#txtRank").val(data.Rank);
                            $("#txtFullName").val(data.Name);
                        }
                    }
                },
                error: function () {
                    alert("error in function");
                }
            });
        });
    });

    $(function () {

        //Created BY   : Sqn Ldr Wicky
        ///Created Date : 2024/05/20
        ///Description : load Vehicle Chassis Number

        $("#txtVehicleRegNo").change(function () {
            $.ajax({
                url: '@Url.Content("~/E658/getVehicleChassisNo")',
                type: 'POST',
                dataType: 'json',
                data: { id: $("#txtVehicleRegNo").val() },
                success: function (data) {

                    if (data.ChassisNo == null)
                    {
                        alert("This is not a valid SLAF No");
                    }
                    else
                    {
                        $("#txtVehicleChassisNo").val(data.ChassisNo);
                        $("#txtVehicleAttachedLoc").val(data.AttachedLocationID);
                    }
                },
                error: function () {
                    alert("This is not a valid SLAF Registered No");
                    $("#txtVehicleRegNo").val('');
                    $("#txtVehicleChassisNo").val('');

                }
            });
        });
    });

    $(function () {

        //Created BY   : Sqn Ldr Wicky
        ///Created Date: 2024/05/15
        ///Description : Update the OMT Details

        $("#btnSaveOmt").click(function () {

            var txtOMTServiceNo = $("#txtOMTServiceNo").val();
            var ecdidValue = document.getElementById("CreatorID").value;
            //alert(txtOMTServiceNo);
            $.ajax({
                url: '@Url.Content("~/E658/UpdateOMTRecord")',
                type: 'POST',
                dataType: 'json',
                /*data: { id: txtOMTServiceNo,ECDID: ecdidValue },*/
                data: { id: txtOMTServiceNo,ECDID: ecdidValue },
                success: function (data) {
                    alert(data.Message);
                    location.reload();


                    if (data.ServiceNo == "Service number is not valid.") {


                    }
                    else {

                    }
                },
                error: function () {
                    alert("error in function");
                }
            });
        });
    });

    $(function () {

        //Created BY   : Sqn Ldr Wicky
        ///Created Date: 2024/05/15
        ///Description : Update the Vehicle Details

        $("#btnSaveVehicle").click(function () {

            var txtOMTVehicleNo = $("#txtVehicleRegNo").val();
            var ecdidValue = document.getElementById("CreatorID").value;
            var chassisNo = $("#txtVehicleChassisNo").val();
            var vehicleLoc = $("#txtVehicleAttachedLoc").val();
            $.ajax({
                url: '@Url.Content("~/E658/UpdateVehicleRecord")',
                type: 'POST',
                dataType: 'json',
                data: { id: txtOMTVehicleNo, ECDID: ecdidValue, ChassisNo: chassisNo, VehicleAttachedLoc: vehicleLoc},
                success: function (data) {
                    alert(data.Message);
                    location.reload();
                    if (data.ServiceNo == "Service number is not valid.") {


                    }
                    else {

                    }
                },
                error: function () {
                    alert("error in function");
                }
            });
        });
    });

    $(function () {
         $('#btnReject').click(function () {

             debugger;
             var E658CreatorID = $("#CreatorID").val();
             var EFlowID = $("#FlowID").val();
             var RoleID = $("#RoleID").val();

             $.ajax({
                 url: '@Url.Action("Reject", "E658")?ECDID=' + E658CreatorID + '&EFlowID=' + EFlowID + '&RoleId=' + RoleID,
             type: 'GET',
             success: function (data) {
                $('#modalContainerReject').html(data);
                $('#recordDetailsModal2').modal('show');
             },
              error: function (xhr, status, error) {
                console.error('Error loading details:', status, error);
            }
          });

             //var route = '@Url.Action("Reject", "E658")?ECDID=' + E658CreatorID + '&EFlowID=' + EFlowID + '&RoleId=' + RoleID;
             //console.log(route);
            //$('#partial2').load(route);
        });
    });

    ////Edit Function for OMT and vehicle

    $(function () {

        //Created BY   : Sqn Ldr Wicky
        ///Created Date : 2024/05/15
        ///Description : show and hide the dvOMTInfo div

        var clickCount = 0;
        $("#isEditOMT").click(function () {
            clickCount++;
            if (clickCount % 2 === 1) {
                $("#dvOMTInfo").show();
            }
            else {
                $("#dvOMTInfo").hide();
            }

        });
    });

    $(function () {

        //Created BY   : Sqn Ldr Wicky
        ///Created Date : 2024/05/15
        ///Description : show and hide the dvVehicleInfo div

        var clickCount = 0;
        $("#isEditVehicle").click(function () {
            clickCount++;
            if (clickCount % 2 === 1) {
                $("#dvVehicleInfo").show();
            }
            else {
                $("#dvVehicleInfo").hide();
            }

        });
    });

    $(function () {
         $('#btnFinalApproval').click(function () {
        
            // Example values; replace with your actual dynamic values or read from the DOM
             var roleId =  $("#RoleID").val();              // Set this dynamically if inside loop
             var E658CreatorDltId = $("#CreatorID").val();    // Set this dynamically if inside loop
             var behavior = $("#Behavior").val();       // Set this dynamically if inside loop
             var hqAuthRemark = $("#txtHQAuthRemarks").val();



          $.ajax({

                url: '@Url.Content("~/LongRun/ForwardHQAuth")',
                type: 'POST',
                dataType: 'json',
                data: {
                    roleId: roleId,
                    E658CreatorDltId: E658CreatorDltId,
                    Behavior: behavior,
                    hqAuthRemark: hqAuthRemark
                },
                success: function (response) {
                    // Handle success response
                    alert('Forwarded successfully!');
                    window.location.href = response.redirectUrl || '@Url.Action("AnotherAction")';
                },
                error: function (xhr, status, error) {
                    // Handle error
                    console.log(error);
                    alert('Error occurred while forwarding.');
                }
            });
      });

    });

    $(function () {

        $('#btnSOGOCertify').click(function () {

            // Example values; replace with your actual dynamic values or read from the DOM
            var roleId =  $("#RoleID").val();              // Set this dynamically if inside loop
            var E658CreatorDltId = $("#CreatorID").val();    // Set this dynamically if inside loop
            var behavior =$("#Behavior").val();        // Set this dynamically if inside loop
            var hqAuthRemark = $("#txtSOGORemark").val();

          $.ajax({
                type: 'POST',
                url: '@Url.Action("ForwardHQAuth", "LongRun")',
                data: {
                    roleId: roleId,
                    E658CreatorDltId: E658CreatorDltId,
                    Behavior: behavior,
                    hqAuthRemark: hqAuthRemark
                },
                success: function (response) {
                    // Handle success response
                    alert('Forwarded successfully!');
                    window.location.href = response.redirectUrl || '@Url.Action("AnotherAction")';
                },
                error: function (xhr, status, error) {
                    // Handle error
                    console.log(error);
                    alert('Error occurred while forwarding.');
                }
            });

      });





    });

</script>

